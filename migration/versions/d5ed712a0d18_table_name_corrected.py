"""Table name corrected

Revision ID: d5ed712a0d18
Revises: 6630c29da586
Create Date: 2025-07-14 01:55:03.810191

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd5ed712a0d18'
down_revision: Union[str, Sequence[str], None] = '6630c29da586'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group_and_agent_associations',
    sa.Column('group_id', sa.UUID(), nullable=True),
    sa.Column('agent_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['ai_agents.id'],ondelete='CASCADE'  ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'],ondelete='CASCADE'  ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_id', 'agent_id')
    )
    op.create_index(op.f('ix_group_and_agent_associations_id'), 'group_and_agent_associations', ['id'], unique=False)
    op.drop_index(op.f('ix_group_and _agent_associations_id'), table_name='group_and _agent_associations')
    op.execute('DROP TABLE "group_and _agent_associations" CASCADE')
    
    op.create_foreign_key(None, 'model_messages', 'group_and_agent_associations', ['group_and_crpnd_agent'], ['id'],ondelete='SET NULL' )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'model_messages', type_='foreignkey')
    op.create_foreign_key(op.f('model_messages_group_and_crpnd_agent_fkey'), 'model_messages', 'group_and _agent_associations', ['group_and_crpnd_agent'], ['id'])
    op.create_table('group_and _agent_associations',
    sa.Column('group_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('agent_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['ai_agents.id'], name=op.f('group_and _agent_associations_agent_id_fkey')),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('group_and _agent_associations_group_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('group_and _agent_associations_pkey')),
    sa.UniqueConstraint('group_id', 'agent_id', name=op.f('group_and _agent_associations_group_id_agent_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_group_and _agent_associations_id'), 'group_and _agent_associations', ['id'], unique=False)
    op.drop_index(op.f('ix_group_and_agent_associations_id'), table_name='group_and_agent_associations')
    op.drop_table('group_and_agent_associations')
    # ### end Alembic commands ###
