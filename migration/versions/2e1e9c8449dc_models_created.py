"""Models Created

Revision ID: 2e1e9c8449dc
Revises: 
Create Date: 2025-07-13 03:38:52.881787

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2e1e9c8449dc'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_agents',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_agents_id'), 'ai_agents', ['id'], unique=False)
    op.create_index(op.f('ix_ai_agents_name'), 'ai_agents', ['name'], unique=True)
    op.create_table('users',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('profile_picture', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_name'), 'users', ['name'], unique=True)
    op.create_table('groups',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('admin_user', sa.UUID(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['admin_user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_id'), 'groups', ['id'], unique=False)
    op.create_index(op.f('ix_groups_name'), 'groups', ['name'], unique=True)
    op.create_table('group_and _agent_associations',
    sa.Column('group_id', sa.UUID(), nullable=True),
    sa.Column('agent_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['ai_agents.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_id', 'agent_id')
    )
    op.create_index(op.f('ix_group_and _agent_associations_id'), 'group_and _agent_associations', ['id'], unique=False)
    op.create_table('group_and_user_association',
    sa.Column('group_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_id', 'user_id')
    )
    op.create_index(op.f('ix_group_and_user_association_id'), 'group_and_user_association', ['id'], unique=False)
    op.create_table('join_requests',
    sa.Column('from_id', sa.UUID(), nullable=True),
    sa.Column('to_id', sa.UUID(), nullable=True),
    sa.Column('group_id', sa.UUID(), nullable=True),
    sa.Column('accepted', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['from_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['to_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('to_id', 'from_id')
    )
    op.create_index(op.f('ix_join_requests_id'), 'join_requests', ['id'], unique=False)
    op.create_table('human_messages',
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('group_and_crpnd_user', sa.UUID(), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['group_and_crpnd_user'], ['group_and_user_association.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_human_messages_id'), 'human_messages', ['id'], unique=False)
    op.create_table('model_messages',
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('group_and_crpnd_agent', sa.UUID(), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['group_and_crpnd_agent'], ['group_and _agent_associations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_model_messages_id'), 'model_messages', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_model_messages_id'), table_name='model_messages')
    op.drop_table('model_messages')
    op.drop_index(op.f('ix_human_messages_id'), table_name='human_messages')
    op.drop_table('human_messages')
    op.drop_index(op.f('ix_join_requests_id'), table_name='join_requests')
    op.drop_table('join_requests')
    op.drop_index(op.f('ix_group_and_user_association_id'), table_name='group_and_user_association')
    op.drop_table('group_and_user_association')
    op.drop_index(op.f('ix_group_and _agent_associations_id'), table_name='group_and _agent_associations')
    op.drop_table('group_and _agent_associations')
    op.drop_index(op.f('ix_groups_name'), table_name='groups')
    op.drop_index(op.f('ix_groups_id'), table_name='groups')
    op.drop_table('groups')
    op.drop_index(op.f('ix_users_name'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_ai_agents_name'), table_name='ai_agents')
    op.drop_index(op.f('ix_ai_agents_id'), table_name='ai_agents')
    op.drop_table('ai_agents')
    # ### end Alembic commands ###
